@model AluminiWebApp.Areas.Alumini.Models.MemoriesModel

@{
    Layout = "~/Areas/Faculty/Views/Shared/_SRKRLayout.cshtml";
}


@using (Html.BeginForm("memories", "Memories", FormMethod.Post, new { enctype = "multipart/form-data" }))
{  @Html.ValidationSummary(true);
    <div class="page-content grid-row">
        <h2 class="center-text alumini_head"><span>Memories</span><br /></h2>
        <div>
            <div class="grid-col-row clear-fix">
                <div class="grid-col grid-col-4">
                    @Html.TextBoxFor(x => x.Heading, new { @class = "form-control", @placeholder = "Heading" })
                    @Html.ValidationMessageFor(x => x.Heading, "", new { @class = "text-danger" })
                    <br />
                    @Html.TextBoxFor(x => x.date, new { @class = "form-control", @placeholder = "Memories date" })
                    @Html.ValidationMessageFor(x => x.date, "", new { @class = "text-danger" })
                </div>
                <div class="grid-col grid-col-4">
                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Description" })
                    @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                    <br />
                    @Html.DropDownListFor(x => x.visible, new SelectList(Model.Visibleto, "visibleTo", "visibleTo"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.visible, "", new { @class = "text-danger" })                   
                </div>
                <div class="grid-col grid-col-4">
                    <input type="file" name="Image" class="form-control" multiple="multiple" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    
                </div>
            </div>
            <br />
            <input type="submit" class="cws-button bt-color-4 border-radius" value="Save" />
            <h4> @TempData["Message"]</h4>
            <input type="hidden" id="Jobid" name="Jobid" />
            <input type="hidden" id="memoriesId" name="memoriesId" value="0" />

        </div>
    </div>

}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    function getParameterByName(name) { name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"), results = regex.exec(location.search); return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " ")); }
    var EventId = getParameterByName('MemoriesId');
    $(document).ready(function () {
        $.ajax({
            type: "Get",
            dataType: "json",
            contenttype: "Application/json",
            url: "../Memories/GetMemoriesforEdit",
            data: ({ "Memoriesid": EventId }),
            success: function (data) {
                $.each(data, function (key, value) {
                    $("#Heading").val(value.Title);
                    $("#Description").val(value.Description);

                    var dateString = value.Memoiesdate.substr(6);
                    var currentTime = new Date(parseInt(dateString));
                    var month = currentTime.getMonth() + 1;
                    var day = currentTime.getDate();
                    var year = currentTime.getFullYear();
                    var date = month + "/" + day + "/" + year;
                    $("#date").val(date);
                    $("#visible").val(value.visibleTo);
                    $("#memoriesId").val(value.Memoriesid);
                });
            }
        });

    });
</script>